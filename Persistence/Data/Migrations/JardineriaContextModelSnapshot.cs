// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(JardineriaContext))]
    partial class JardineriaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Persistence.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoContacto")
                        .HasColumnType("longtext");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CodigoEmpleadoRepVentas")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoEmpleadoRepVentasNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("longtext");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("LimiteCredito")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("LineaDireccion1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LineaDireccion2")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreContacto")
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CodigoEmpleadoRepVentasNavigationId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Persistence.Entities.DetallePedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CodigoPedidoNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CodigoProductoNavigationId")
                        .HasColumnType("int");

                    b.Property<short>("NumeroLinea")
                        .HasColumnType("smallint");

                    b.Property<decimal>("PrecioUnidad")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoPedidoNavigationId");

                    b.HasIndex("CodigoProductoNavigationId");

                    b.ToTable("DetallePedidos");
                });

            modelBuilder.Entity("Persistence.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Apellido2")
                        .HasColumnType("longtext");

                    b.Property<int?>("CodigoJefe")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoJefeNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoOficina")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CodigoOficinaNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Puesto")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CodigoJefeNavigationId");

                    b.HasIndex("CodigoOficinaNavigationId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Persistence.Entities.GamaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DescripcionHtml")
                        .HasColumnType("longtext");

                    b.Property<string>("DescripcionTexto")
                        .HasColumnType("longtext");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GamaProductos");
                });

            modelBuilder.Entity("Persistence.Entities.Oficina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LineaDireccion1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LineaDireccion2")
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Oficinas");
                });

            modelBuilder.Entity("Persistence.Entities.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CodigoClienteNavigationId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaPago")
                        .HasColumnType("date");

                    b.Property<string>("FormaPago")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdTransaccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoClienteNavigationId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Persistence.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CodigoCliente")
                        .HasColumnType("int");

                    b.Property<int>("CodigoClienteNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("Comentarios")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("FechaEntrega")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaEsperada")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaPedido")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CodigoClienteNavigationId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Persistence.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<short>("CantidadEnStock")
                        .HasColumnType("smallint");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Dimensiones")
                        .HasColumnType("longtext");

                    b.Property<string>("Gama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GamaNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PrecioProveedor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Proveedor")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GamaNavigationId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Persistence.Entities.Cliente", b =>
                {
                    b.HasOne("Persistence.Entities.Empleado", "CodigoEmpleadoRepVentasNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("CodigoEmpleadoRepVentasNavigationId");

                    b.Navigation("CodigoEmpleadoRepVentasNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.DetallePedido", b =>
                {
                    b.HasOne("Persistence.Entities.Pedido", "CodigoPedidoNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("CodigoPedidoNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistence.Entities.Producto", "CodigoProductoNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("CodigoProductoNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoPedidoNavigation");

                    b.Navigation("CodigoProductoNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Empleado", b =>
                {
                    b.HasOne("Persistence.Entities.Empleado", "CodigoJefeNavigation")
                        .WithMany("InverseCodigoJefeNavigation")
                        .HasForeignKey("CodigoJefeNavigationId");

                    b.HasOne("Persistence.Entities.Oficina", "CodigoOficinaNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("CodigoOficinaNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoJefeNavigation");

                    b.Navigation("CodigoOficinaNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Pago", b =>
                {
                    b.HasOne("Persistence.Entities.Cliente", "CodigoClienteNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("CodigoClienteNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoClienteNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Pedido", b =>
                {
                    b.HasOne("Persistence.Entities.Cliente", "CodigoClienteNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("CodigoClienteNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoClienteNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Producto", b =>
                {
                    b.HasOne("Persistence.Entities.GamaProducto", "GamaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("GamaNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GamaNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Cliente", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Persistence.Entities.Empleado", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("InverseCodigoJefeNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.GamaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Persistence.Entities.Oficina", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Persistence.Entities.Pedido", b =>
                {
                    b.Navigation("DetallePedidos");
                });

            modelBuilder.Entity("Persistence.Entities.Producto", b =>
                {
                    b.Navigation("DetallePedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
